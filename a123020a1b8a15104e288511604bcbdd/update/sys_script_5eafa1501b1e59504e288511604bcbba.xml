<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_hocsa_epp_solicitudes_epp</collection>
        <condition/>
        <description>Se inactiva el registro al ser rechazada la solicitud, se hace override de la BR task closer debido a que los valores de rechazo no se consideran de cajita como cierre</description>
        <execute_function>false</execute_function>
        <filter_condition table="x_hocsa_epp_solicitudes_epp">stateCHANGESTO9^ORstateCHANGESTO12^EQ<item display_value="Rechazada por Supervisor" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="9"/>
            <item display_value="Rechazada por SST" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="true" value="12"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>SLX Inactivar Rechazada </name>
        <order>1000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {



    var gr = new GlideRecord("x_hocsa_epp_solicitudes_epp");
    gr.addQuery("sys_id", current.sys_id);
    gr.query();
    if (gr.next()) {

		//GlideRecord a la aprobaciÃ³n del epp
        var app = new GlideRecord("x_hocsa_epp_aprobacion_epp");
        app.addQuery("u_slx_solicitud_epp", current.sys_id);
        app.query();
        while (app.next()) {
            gr.u_slx_estado_epp = '1'; //queda en estado disponible
            gr.update();
			//GlideRecord al inventario
            var epp = new GlideRecord("x_hocsa_epp_inventario_epp");
            epp.addQuery("sys_id", app.u_slx_epp);
            epp.query();
            while (epp.next()) {
                epp.u_slx_cantidad += app.u_slx_cantidad;//Se devuelve la cantidad al inventario
                epp.update();
            }

        }
        gr.active = false;//Se deja inactivo
        gr.update();

    }


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>slx.bs</sys_created_by>
        <sys_created_on>2022-09-28 15:07:42</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>5eafa1501b1e59504e288511604bcbba</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>SLX Inactivar Rechazada </sys_name>
        <sys_overrides display_value="task closer">475ef3c5c611228401440a7a5f29a786</sys_overrides>
        <sys_package display_value="Solicitudes de EPP" source="x_hocsa_epp">a123020a1b8a15104e288511604bcbdd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Solicitudes de EPP">a123020a1b8a15104e288511604bcbdd</sys_scope>
        <sys_update_name>sys_script_5eafa1501b1e59504e288511604bcbba</sys_update_name>
        <sys_updated_by>slx.bs</sys_updated_by>
        <sys_updated_on>2022-12-16 13:12:24</sys_updated_on>
        <template/>
        <u_slx_valida_adjunto>false</u_slx_valida_adjunto>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=5eafa1501b1e59504e288511604bcbba"/>
</record_update>
